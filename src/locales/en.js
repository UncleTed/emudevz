export default {
	_created_by: "Created by",
	_music_by: "Music by",
	_credits: "Credits",
	apu: "APU",
	also: "also",
	backup: "Backup",
	binary: "Binary",
	button_play: "✨ Play",
	button_quit: "🚪 Quit",
	button_settings: "⚙️ Settings",
	byte: "byte",
	bytes: "bytes",
	calculator: "Calculator",
	cancel: "Cancel",
	cant_open_emulator: "The emulator can't be opened now!",
	cant_open_file: "This file can't be opened now!",
	cartridge: "Cartridge",
	chapter_next: "Go to next chapter",
	chapter_previous: "Go to previous chapter",
	check_diffs: "Check diffs",
	check_diffs_frame: "Frame",
	check_diffs_mode: "Diff mode",
	check_diffs_mode_fade: "Fade",
	check_diffs_mode_swipe: "Swipe",
	check_diffs_mode_difference: "Difference",
	check_diffs_balance: "Balance",
	choose_an_answer: "Choose an answer.",
	close: "Close",
	coming_soon: "Coming soon!",
	command_chat_already_open: "Already open.",
	command_chat_description: "Runs the chat app.",
	command_clear_description: "Clears the terminal.",
	command_help_description: "Shows this help.",
	command_repl_avoid_collapsing:
		"«to avoid collapsing big objects/arrays, run `repl -v`»",
	command_repl_description: "Opens a JavaScript REPL.",
	command_test_description: "Tests your solution.",
	command_cd_description:
		"Changes directory (usage: `cd a_directory`, or `cd ..`)",
	command_cp_description: "Copies something (usage: `cp orig_path dest_path`)",
	command_ls_description: "Shows a file list (usage: `ls`, or `ls -r`)",
	command_mkdir_description: "Creates directories (usage: `mkdir dir1 dir2`)",
	command_mv_description:
		"Moves or renames something (usage: `mv old_path new_path`)",
	command_open_description:
		"Opens files (usage: `open file1.txt file2.js`, or `open *`)",
	command_rm_description: "Removes something (usage: `rm something`)",
	command_touch_description:
		"Creates files (usage: `touch file1.txt file2.js`)",
	complete: "complete",
	console: "Console",
	controller: "Controller",
	cpu: "CPU",
	creating_file: "Creating file",
	creating_directory: "Creating directory",
	decimal: "Decimal",
	delete: "Delete",
	deleting: "Deleting",
	disconnected: "🔌  Disconnected. Use the `chat` command to talk again!",
	drag_and_drop_here: "Drag a ROM here!",
	emulation_fullscreen: "Go fullscreen",
	emulation_go_to_error: "Go to error line",
	emulation_open_debugger: "Open debugger",
	emulation_reload: "Reload ROM",
	emulation_stop: "Stop emulation",
	enter_a_file_name: "Enter a file name...",
	file_created: "File created!",
	file_created_error: "The file cannot be created.",
	file_doesnt_exist1: "The file",
	file_doesnt_exist2: "doesn't exist. Click here to create it.",
	find_errors: "Find errors",
	go_back: "Go back",
	golden_log: "Golden log",
	help_basic:
		"💬  If you're stuck, press `Ctrl+C` and run the `help` command...",
	help_level: "✨  Level:",
	help_more: "💬  For additional help, run `help -a`",
	help_keys: "🚀  For keyboard shortcuts, run `help keys`",
	help_shortcuts:
		"🚀  General:\n  ♐  Switch active pane:\n     `Alt+{DirectionalKey}` (or mouse click)\n💻  Terminal:\n  🛑  Close app:\n     `Ctrl+C`\n  🕑  Speed up chat:\n     `Enter`\n  📜  Scroll terminal:\n     `Ctrl+Shift+PageUp`/`Ctrl+Shift+PageDown` (or mouse wheel)\n  📋  Copy/paste:\n     `Ctrl+Shift+C`/`Ctrl+Shift+V`\n  🧲  Autocomplete:\n     `Tab`\n📝  Code editor:\n  ▶️  Run code:\n     `Alt+Enter`\n  🔍  Find file:\n     `Ctrl+P`\n  ❌  Close file:\n     `Ctrl+E`",
	hexadecimal: "Hexadecimal",
	hot_reload: "Hot reload",
	integration_dizzysheepdisaster_level: "Level",
	integration_falling_lives: "lives",
	integration_falling_points: "Points",
	integration_felinefloodfiasco_level: "Level",
	integration_heist_wave: "Wave",
	integration_jupiterscope2_wrong_difficulty: "Wrong difficulty level!",
	integration_minekartmadness_level: "Level",
	integration_nalleland_limited_lives: "Limited lives",
	integration_nalleland_lives: "lives",
	integration_nalleland_wrong_mode_start1: "Wrong mode: ",
	integration_nalleland_wrong_mode_start2: "Wrong mode: only enable ",
	integration_nalleland_wrong_mode_end1: " is disabled!",
	integration_nalleland_wrong_mode_end2: "!",
	integration_spacegulls_zone: "Zone",
	integration_roboninjaclimb_level: "Level",
	integration_supertiltbro_shouldbesettofive: 'should be set to "Five"',
	integration_supertiltbro_shouldbesettofair: 'should be set to "Fair"',
	integration_supertiltbro_playing: "Playing challenge",
	integration_teslavsedison_wrongmode: "Wrong mode!",
	integration_wolfspirit_level: "Level",
	integration_wolfspirit_lives: "lives",
	language: "Language",
	language_en: "English",
	language_es: "Spanish",
	level_history: "Level history",
	letsplay_unlock_msg1: "New",
	letsplay_unlock_msg2: "NEEES game",
	letsplay_unlock_msg3: "unlocked!",
	loading: "Loading...",
	mappers: "Mappers",
	memory_viewer: "Memory Viewer",
	mkdir_parent_flag: "(to create multiple directories at once, run `mkdir -p`)",
	music: "Music",
	no: "No",
	no_open_files: "🚫 No open files!<br>🔍 Use <code>Ctrl+P</code> to search.",
	not_now: "⚠️  Not now!",
	opening: "Opening",
	optional: "(optional)",
	pin_left: "Pin left",
	plot:
		"In the year 2300, the world suffered a massive cyber attack which <b>destroyed</b> the entire Internet. Since then, you and an online friend are trying to understand the sparse pieces of documentation about the NEEES, an ancient game console released in 1983. With your programming skills, you'll have to build an emulator that runs those old games, helping preserve the video game history.",
	ppu: "PPU",
	press_any_key_to_continue: "⌨️  Press any key to continue.",
	register_A: "Accumulator Register",
	register_X: "X Register",
	register_Y: "Y Register",
	register_SP: "Stack Pointer",
	register_PC: "Program Counter",
	register_flags_N: "Negative Flag",
	register_flags_V: "Overflow Flag",
	register_flags_I: "Interrupt Disable Flag",
	register_flags_D: "Decimal Flag",
	register_flags_Z: "Zero Flag",
	register_flags_C: "Carry Flag",
	register_flags_U: "Unused Flag",
	repl_code_error:
		"⚠️  Your code has errors. The `$` object won't be available.",
	repl_code_success: "💬  Inspect your main code using the `$` object.",
	reset_level: "Reset level progress",
	resize_warning: "Resizing is not supported while typing.",
	restore: "Restore",
	rm_with_files:
		"⚠️  This directory contains ~files~. Delete everything? ~(y/N)~",
	rm_deleting_recursively: "💥  Deleting recursively...",
	rm_recursive_flag: "(to skip this check, run `rm -rf`)",
	rollback: "Restore /code using this snapshot",
	rollback_sure:
		"Your ENTIRE code will be replaced by this snapshot. Are you sure?",
	root_enabled: "Root privileges enabled. Use with caution!",
	root_games_unlocked: "All games unlocked.",
	run: "Run",
	run_emulator: "Run emulator",
	save: "Save",
	save_file: "Save file",
	save_file_cannot_be_restored: "This save file cannot be restored.",
	scroll_left: "Scroll left",
	scroll_right: "Scroll right",
	search_files: "Search files...",
	select_a_chapter: "Select a chapter",
	settings: "Settings",
	shell_command_not_found: "command not found",
	speed_up_chat: "Speed up chat",
	stack: "Stack",
	step_forward: "Step",
	step_reset: "Reset",
	streaming_video: "Receiving video stream",
	sync_emulator: "Sync emulator",
	take_me_to_the_action: "take me to the action",
	template_file: "📑 This is a template file.",
	template_file_click_existing: "Click here to navigate to its working copy:",
	template_file_click_unexisting: "Click here to create a working copy:",
	testing: "Testing: ",
	tests_success: "🎉  All tests passed.",
	tests_success_continue: "🎉  All tests passed. Press any key to continue.",
	tests_failure: "💥  Some tests are broken. Fix your code.",
	tests_errors_found: "🚫  Errors found.",
	tests_warnings_found: "⚠️  Warnings found.",
	tests_more: "💬  For more info, run `test -v [testNumber]`",
	tests_more_units:
		"💡  For a specific test type, run `test audio` | `test video` | `test unit`",
	tests_audio_apu_output: "APU output",
	tests_audio_expected_output: "Expected output",
	tests_audio_apu_not_unlocked: "❌  APU is not unlocked.",
	tests_audio_failed1: "❌  Wrong samples (frame ",
	tests_audio_failed2: " of ",
	tests_audio_failed3: ")",
	tests_audio_no_tv: "❌  There's no TV!",
	tests_audio_running: "🎧  Running audio test:",
	tests_video_ppu_output: "PPU output",
	tests_video_expected_output: "Expected output",
	tests_video_ppu_not_unlocked: "❌  PPU is not unlocked.",
	tests_video_no_tv: "❌  There's no TV!",
	tests_video_running: "🎥  Running video test:",
	tests_emulator_crashed: "💥  Emulator crashed.",
	tests_video_failed1: "❌  Wrong pixels (frame ",
	tests_video_failed2: " of ",
	tests_video_failed3: ")",
	unlocks: "Unlocks",
	using_bugged_emulator: "Using BrokenNEEES ❌",
	using_default_emulator: "Using BrokenNEEES ⚠️",
	using_gamepad: "Using gamepad",
	using_keyboard: "Using keyboard: arrows, D, [space], [enter], [backspace]",
	using_old_snapshot: "⚠️ Using a read-only snapshot of your old code.",
	using_your_emulator: "Using your emulator ✅",
	volume: "Volume",
	win_games_here_to_unlock_roms: "Win games here to unlock new ROMs",
	yes: "Yes",
	your_cpu_works: "Your CPU works!",
	your_emulator: "Your emulator",
};

---
main:
  run: |
    set((m) => m.chat.winOnEnd = true);
  messages:
  - ok
  - "{5}it's time"
  - "{10}I think you're ready to know"
  responses:
  - what? [what]

what:
  messages:
  - I'm actually...
  - "{30}the creator of BrokenNEEES"
  - "{30}it has been rough since <AI> took over and most manual programming efforts have died"
  - "{5}I miss <manual programming>, a lot"
  - "{5}I wanted to make someone out there enjoy programming like I do"
  - "{5}then I found you, and your interest in emulation made me want to help"
  - "{10}the emulator isn't actually <broken>, those were bugs I planted on purpose 😅"
  - "{5}the goal was to have an excuse to teach someone something I love"
  - "{5}that is why I always have some code ready to nudge you forward"
  - "{5}I hope you are not mad"
  responses:
  - why fake bugs? [why]
  - so, what now? [integrate]

why:
  messages:
  - you don't learn the soul of an emulator by reading, you learn it by doing!
  - "{5}and being able to actually play the games without bugs is a great motivator 👾"
  responses:
  - (*) so your "real NEEES" was also your emulator? [real]
  - fine, what is next? [integrate]

real:
  messages:
  - "{10}😅 🤣 ☠️"
  responses:
  - ...why

integrate:
  run: |
    {{Top}}.load(null, "rom");
  messages:
  - I'm gonna give you full control over the 🕹️  Emulator
  - "{5}let's see..."
  run-after-messages: |
    level.startEffect("earthquake");
    setTimeout(() => {
      bus.emit("patching-end");
    }, 500);
  events: 
  - patching-end [done]

done:
  run: |
    level.stopEffect();
    book.unlock("useConsole");
  messages:
  - ✅  done!
  - <! 🕹️  NEEES integrated.
  - now, the 🕹️  icon in the emulator will glow ✨
  - if you enable it, the frontend will look up an `Emulator` class in 📄  ~/code/index.js~
  - and there will be no trace of BrokenNEEES
  responses:
  - but I don't have that class! [exercise]

exercise:
  messages:
  - yeah, let's hand over the missing code to you
  - you'll have full control of, at least, the 🌀  emulator core
  - |-
    📚  create code files from these templates:
      📄  ~/tmpl/Emulator.js~
      📄  ~/tmpl/saveStates.js~
      📄  ~/tmpl/mappers/mappers.js~
      📄  ~/tmpl/mappers/0_NROM.js~
  - 📚  import `Emulator.js` and export the object under the `Emulator` key in 📄  ~/code/index.js~
  - notice that, when doing this, only <NROM> (mapper 0) games will work
  - you will fix that in the 🗜️  Mappers chapter
  responses:
  - (*) what about the tests? 🧪 [tests]
  - ▶️  continue [credits]

tests:
  messages:
  - you want the unit tests? 🤔
  - yeah, if you improve the emulator later, I guess they can be useful to ensure everything works
  - |-
    and of course you'll have to eventually update them, so here they are:
      📄  ~/tmpl/tests/apu.test.js~
      📄  ~/tmpl/tests/bus.test.js~
      📄  ~/tmpl/tests/cartridge.test.js~
      📄  ~/tmpl/tests/cpu.test.js~
      📄  ~/tmpl/tests/cpu_addressing_modes_1.test.js~
      📄  ~/tmpl/tests/cpu_addressing_modes_2.test.js~
      📄  ~/tmpl/tests/cpu_instructions_1.test.js~
      📄  ~/tmpl/tests/cpu_instructions_2.test.js~
      📄  ~/tmpl/tests/cpu_instructions_3.test.js~
      📄  ~/tmpl/tests/cpu_instructions_4.test.js~
      📄  ~/tmpl/tests/cpu_instructions_5.test.js~
      📄  ~/tmpl/tests/ppu.test.js~
  responses:
  - ...exercise

credits:
  comment: |-
    // HACK: Using monospace numbers (𝟶 𝟷 𝟸 𝟹 𝟺 𝟻 𝟼 𝟽 𝟾 𝟿) to work around a dictionary bug
    // tied to src/gui/components/modals/CreditsModal.jsx
    // tied to src/data/levels/06_Console/06_Full control/chat/*.yml
    // tied to src/data/levels/06_Console/06_Full control/meta.yml
  messages:
  - "{10}THANKS"
  - "{10}FOR"
  - |+
    {10}PLAYING! 💜
  - |+
    {10}<EmuDevz> - https://github.com/afska/emudevz
  - "{10}🧪  by @afska"
  - |+
    {10}and a lot of people, actually!!
  - "{10}🎼  **Music** by @Synthenia"
  - |+
    {10}🎨  **Art** by @AngryMuffin and @DamianDeAmicis
  - "{10}👾  **Homebrew games** by:"
  - "{10}  💦 🏛️  Böbl by <Morphcat Games>"
  - "{10}  🍒 🃏  Concentration Room by <PinoBatch>"
  - "{10}  🦅 🧷  Crowborg by <miau6502>"
  - "{10}  💫 🐑  Dizzy Sheep Disaster by <IGW Games>"
  - "{10}  💤 🐶  Dream Dog Dilemma by <IGW Games>"
  - "{10}  🙌 ☁️  Falling by <xram64>"
  - "{10}  🌊 🐈  Feline Flood Fiasco by <IGW Games>"
  - "{10}  🦟 🍳  Filthy Kitchen by <dustmop>"
  - "{10}  🐰 🛰️  Fluffy Space Escape by <IGW Games>"
  - "{10}  🧱 🐙  From Below by <Matt Hughson>"
  - "{10}  🧙 ⚔️  Guild Quest by <johnybot>"
  - "{10}  ⛽ 💥  Heist by <johnybot>"
  - "{10}  🌌 🔫  Isostasy Demo by <Gravel Studios>"
  - "{10}  🚀 💥  Jupiter Scope 𝟸 by <nin-kuuku>"
  - "{10}  💎 ⛏️  Minekart Madness by <Matt Hughson>"
  - "{10}  🐸 🌍  Missing Lands by <IGW Games>"
  - "{10}  🧸 📍  Nalleland by <Nallebeorn>"
  - "{10}  🦅 ⛩️  Raven's Gate by <MercuryBD>"
  - "{10}  🤖 🧗  Robo-Ninja Climb by <Bite The Chilli>"
  - "{10}  🕊️ 🛰️  Spacegulls by <Morphcat Games>"
  - "{10}  🧚 🧹  Star Power Demo by <nia-prene>"
  - "{10}  🦸 🤸  Super Tilt Bro by <sgadrat>"
  - "{10}  📻 💡  Tesla Vs Edison by <samophlange>"
  - "{10}  🌳 🏠  Thwaite by <PinoBatch>"
  - "{10}  🏭 🔩  Trouble At 2A03 by <Team Disposable>"
  - "{10}  🐺 ⛓️  Wolfling by <Lazycow>"
  - |+
    {10}  🐺 🌲  Wolf Spirit by <valdirSalgueiro>
  - "{10}🕵️  **Test ROMs** by:"
  - "{10}  🧠 🔎  nestest by <kevtris>"
  - "{10}  👋 🌎  Hello world by <PinoBatch>"
  - "{10}  📺 🔎  240p Test Suite by <PinoBatch>"
  - "{10}  🔊 🖥️  Multiple test ROMs by <8bitworkshop>"
  - "{10}  🎨 🐏  PaletteRAM test by <blargg>"
  - "{10}  📦 📥  Crowd by <Kragen (ported by rainwarrior)>"
  - |+
    {10}  💯 🎹  Song demo by <zeta0134 (song by celestialghost)>
  - "{10}🙏  **Thanks to**..."
  - "{10}  🕹️ 🛠️  NesDev"
  - "{10}  👌 💻  Easy 𝟼𝟻𝟶𝟸 by <skilldrick>"
  - |+
    {10}  📖 🦀  Writing NES Emulator in Rust by <bugzmanov>
  - "{10}🔑  **Licenses**:"
  - "{10}  💿 💻  **Code** is licensed under The MIT License"
  - |+
    {10}  📖 ✏️  **Levels** are licensed under CC BY-NC 𝟺.𝟶
  - |+
    {10}this game uses <third-party> assets and software, check licenses.txt
  - if you enjoyed this, please consider supporting my work 💜
  - see ya! 👋
  responses:
  - ▶️  continue [end]

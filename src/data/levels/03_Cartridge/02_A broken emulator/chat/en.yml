---
main:
  run: |
    level.launchEmulator();
    set((m) => m.chat.winOnEnd = true);
  messages:
  - bet you don't know what I found
  - a working NEEES emulator!
  - though "working" is a bit of a stretch 😅
  responses:
  - does it work or not? 🤨 [works]

works:
  messages:
  - it fails in almost every aspect
  - tons of BUGS
  - it's like the author was drunk or something 🙃 🔫
  - I guess that's why they named it <BrokenNEEES>
  - you can try it anyway...
  - drag a rom into the TV or use one of my games
  - I sent you a bunch of these, they are in 📁  ~/roms~
  - you can launch them with the `open` command
  responses:
  - (*) what bugs did you find? 🐞 [bugs]
  - this is awful 👎 [awful]

bugs:
  messages:
  - first, the 💾  Cartridge seems to start reading <CHR-ROM> from the wrong byte, so all graphics look garbled
  - the 💻  CPU timing is completely random (causing sync problems) and the `BIT` instruction randomly fails
  - those CPU bugs also mess up the -already out of tune- 🔊  APU channels, so all sound is trash
  - they didn't even map the 🎮  Controller correctly! it's mapped backwards and doesn't allow buttons A and B to be pressed simultaneously
  - finally, the 🖥️  PPU adds screen noise, moves the scroll registers in a weird way, and draws sprites in the wrong position
  - the 🧠  Mappers work fine, fortunately 😅
  responses:
  - ...works

awful:
  messages:
  - I know, right?
  - but there's a good thing about it
  - it's designed in a <modular> way
  - so we can reuse its components ♻️
  - that'll allow us to implement things in whatever order we want!
  - you could start, for example, implementing the graphics (🖥️  PPU) and I'll patch your emulator so it uses the 💻  CPU, 🔊  APU, and 🎮  Controller from <BrokenNEEES>
  - then you can continue fixing the other things at your pace
  - let's fix the 💾  Cartridge first
  responses:
  - ▶️  continue [end]

---
main:
  messages:
  - vamos a empezar a programar en JavaScript
  - <! Computadora actualizada.
  - por cierto, tu computadora ha sido <actualizada>
  - ahora puedes usar MÚLTIPLES archivos 🗃️ 📁
  - muy bueno, ¿no?
  responses:
  - es una funcionalidad bastante común [notcool]
  - ¿cómo tienes tanto control de mi computadora? 😶 [hacked]

hacked:
  run-after-messages: |
    $.goTo("play");
  messages:
  - ¿quién te dijo que esta era <TU> computadora?
  - ...notcool
  responses: []

notcool:
  run-after-messages: |
    $.goTo("play");
  messages:
  - argh, estos jóvenes no pueden apreciar cosas lindas hoy en día 😔
  - |+
    como sea, tengo que asegurarme de que sabes crear <módulos JS>
  responses: []

play:
  run-after-messages: |
    $.goTo("exercise");
    bus.emit("kill");
  messages:
  - el editor de código está mostrando tu <archivo de código principal> (el punto de entrada de tu emulador)
  - está en 📄  ~/code/index.js~
  - ahora tienes varios nuevos comandos para manejar archivos 🚀
  - aunque solo puedes modificar lo que hay en 📁  ~/code~
  - corre `help -a` y experimenta con ellos un poco
  - abre el chat nuevamente cuando los hayas aprendido a usar
  - <! Desconectado.
  responses: []

exercise:
  messages:
  - 📚  crea un archivo en 📄  ~/code/Cartridge.js~
  - 📚  su <valor a exportar> debería ser una <clase vacía>
  - 📚  luego, importa ese archivo desde 📄  ~/code/index.js~
  - 📚  y exporta un <objeto literal> con una sola clave (`Cartridge`) apuntando a esa clase
  - |-
    tu archivo ~index.js~ debería verse así:
      ```javascript
      import Cartridge from "./Cartridge";
      export default { Cartridge }```
  responses:
  - (*) ¿exportar? ¿módulos? 🧐 [modules]
  - (*) ¿cómo puedo copiar código desde la terminal? [copy]

modules:
  messages:
  - sí, cada archivo es un módulo, y tiene un valor <exportado>
  - ese valor puede ser cualquier <expresión JS>, y puede ser usado en otro lugar <importando> el módulo
  - |-
    algo de ayuda...

    para definir el valor que exporta un módulo:
      ```javascript export default "A_STRING"```
      ```javascript export default { an: "object", number: 123 }```
      ```javascript export default [1, 2, 3]```
      ```javascript export default function aFunction() { }```
      ```javascript export default class SomeClass { }```
    para importar un módulo:
      ```javascript import aFunction from "./relative/path/to/aFunction"```
      ```javascript import SomeClass from "./relative/path/to/SomeClass"```
  responses:
  - ...exercise

copy:
  messages:
  - en la terminal, en lugar de `Ctrl+C` y `Ctrl+V`, puedes usar `Ctrl+Shift+C` y `Ctrl+Shift+V`
  responses:
  - ...exercise

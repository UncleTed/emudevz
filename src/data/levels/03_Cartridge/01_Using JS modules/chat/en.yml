---
main:
  messages:
  - we're gonna start coding in JavaScript
  - <! Computer upgraded.
  - by the way, your computer has been <upgraded>
  - now you can use MULTIPLE files 🗃️ 📁
  - very cool, huh?
  responses:
  - that's a pretty normal feature [notcool]
  - why do you have so much control of my computer? 😶 [hacked]

hacked:
  run-after-messages: |
    $.goTo("play");
  messages:
  - who told you this was <YOUR> computer?
  - ...notcool
  responses: []

notcool:
  run-after-messages: |
    $.goTo("play");
  messages:
  - argh, these kids can't appreciate cool things nowadays 😔
  - |+
    anywho, I need to make sure you know how to create <JS modules>
  responses: []

play:
  run-after-messages: |
    $.goTo("exercise");
    bus.emit("kill");
  messages:
  - the code editor is displaying your <main code file> (the entry point of your emulator)
  - it's in 📄  ~/code/index.js~
  - now you have a bunch of new commands to manage files 🚀
  - though you can only modify what's in 📁  ~/code~
  - run `help -a` and play around with them for a little bit
  - open the chat again when you're ready
  - <! Disconnected.
  responses: []

exercise:
  messages:
  - 📚  create a file in 📄  ~/code/Cartridge.js~
  - 📚  its <default export> should be an <empty class>
  - 📚  then, import that file from 📄  ~/code/index.js~
  - 📚  and export an <object literal> with only one key (`Cartridge`) pointing to that class
  - |-
    your ~index.js~ file should look like this:
      ```javascript
      import Cartridge from "./Cartridge";
      export default { Cartridge }```
  responses:
  - (*) export? modules? 🧐 [modules]
  - (*) how can I copy code from the terminal? [copy]

modules:
  messages:
  - yeah, every file is a module, and it has an <exported> value
  - that value can be any <JS expression>, and it can be used elsewhere by <importing> the module
  - |-
    here's some help...

    to set the export value of a module:
      ```javascript export default "A_STRING"```
      ```javascript export default { an: "object", number: 123 }```
      ```javascript export default [1, 2, 3]```
      ```javascript export default function aFunction() { }```
      ```javascript export default class SomeClass { }```
    to import a module:
      ```javascript import aFunction from "./relative/path/to/aFunction"```
      ```javascript import SomeClass from "./relative/path/to/SomeClass"```
  responses:
  - ...exercise

copy:
  messages:
  - in the terminal, instead of `Ctrl+C` and `Ctrl+V`, you can use `Ctrl+Shift+C` and `Ctrl+Shift+V`
  responses:
  - ...exercise

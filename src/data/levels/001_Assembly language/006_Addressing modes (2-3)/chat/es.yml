---
main:
  run: |
    if (level.hasStoredContent) $.goTo("exercise");
    else {
      set((m) => {
        m.chat.stopBlock = locales.get("not_now");
        m.$canRun = false;
        m.$canEdit = false;
      });
      {{Bottom}}.setMemoryStart(0x0);
    }
  messages: []
  events:
  - compiled [lda]

lda:
  run: |
    bus.emit("step");
  run-after-messages: |
    set((m) => m.$canRun = true);
  messages:
  - aquí es donde el direccionamiento se pone interesante 🧐
  - en el modo de direccionamiento "Zero Page,X", se da una dirección de la página cero
  - y luego se suma el valor de [X]
  - ejecuta las primeras dos instrucciones ⏩
  events:
  - step [zero1]

zero1:
  messages: []
  events:
  - step [zero2]

zero2:
  run: |
    set((m) => m.$canRun = false);
  run-after-messages: |
    set((m) => m.$canRun = true);
  messages:
  - esto terminó escribiendo $CD (el contenido de [A]) en $0062
  - que es el resultado de $60 + [X]
  - nota que hackeé tu Visor de Memoria para que muestre la página cero
  - puedes comprobarlo tú 👀
  - corre las siguientes dos instrucciones ⏩
  events:
  - step [zero3]

zero3:
  messages: []
  events:
  - step [zero4]

zero4:
  run: |
    set((m) => m.$canRun = false);
  messages:
  - ¿ves? la <misma> instrucción (`STA $60,X`) tuvo dos resultados <diferentes> 🤯
  - como [X] ahora es 3, escribió en $0063
  responses:
  - ¿qué pasa si el resultado de la suma es más grande que un byte? [wrap]

wrap:
  run-after-messages: |
    set((m) => m.$canRun = true);
  messages:
  - la dirección da la vuelta 🎁
  - déjame mostrarte
  - ejecuta dos instrucciones más ⏩
  events:
  - step [wrap1]

wrap1:
  messages: []
  events:
  - step [wrap2]

wrap2:
  run: |
    set((m) => m.$canRun = false);
  run-after-messages: |
    set((m) => m.$canRun = true);
    {{Bottom}}.setMemoryStart(0x4020);
  messages:
  - como viste, escribió $CD en $05
  - el próximo modo de direccionamiento se llama "Absolute,X"
  - es la versión absoluta de "Zero Page,X"
  - voy a cambiar el Visor de Memoria de vuelta a $4020 para que puedas verlo
  - termina de correr el código ⏩
  events:
  - step [rest1]

rest1:
  messages: []
  events:
  - step [rest2]

rest2:
  messages:
  - esto ha escrito $CD en $4052 😋
  - ($4050 + el contenido de [X])
  responses:
  - ¡muy bueno! ¿puedo usar [Y] en vez de [X]? [yvariants]

yvariants:
  messages:
  - sí, hay equivalentes de estos modos que usan [Y]
  - no todas las instrucciones los soportan, sin embargo 👎
  - se llaman "Zero Page,Y" y "Absolute,Y"
  - ¿quieres hacer algo divertido?
  responses:
  - mmm... ¿sí? [exercise]

exercise:
  run: |
    level.fillContentFromTemp();
    set((m) => {
      m.chat.stopBlock = null;
      m.$canRun = true;
      m.$canEdit = true;
      m.content.useTemp = false;
    });
    {{Bottom}}.setDelay(0);
  messages:
  - borra todo el código
  - construye un programa que grite por la memoria 😱
  - eso significa, que escriba $AA exactamente 64 veces desde $4080 hasta $40BF
  - como siempre, cuando esté listo, ejecuta el comando `test`
  responses: []

---
main:
  messages:
  - la APU tiene una <unidad interna> llamada ðŸ”€  Secuenciador de Frames
  - que <cuenta ciclos> ðŸš²  siguiendo una secuencia predeterminada de cuatro o cinco pasos
  - y dispara <eventos de clock> donde los canales pueden <reaccionar>
  - (la palabra frame puede ser un poco confusa aquÃ­, Â¡esto no tiene nada que ver con la seÃ±al de video!)
  responses:
  - Â¿cuÃ¡l es la secuencia? [sequence]

sequence:
  messages:
  - en realidad, Â¡solo nos importan los eventos de quarter y <half> de la secuencia!
  - la secuencia empieza en 0
  - en la secuencia de cuatro pasos, los quarter frame ocurren en los ciclos 3729, 7457, 11186, 14916
  - en la secuencia de cinco pasos, los quarter frame ocurren en los ciclos 3729, 7457, 11186, 18641
  - los half frame ocurren en el <segundo> y <cuarto> quarter-frame de cada secuencia
  - y cuando el contador llega al cuarto quarter-frame, se reinicia a 0
  - <{sequencer.png}>
  - los juegos deben reaccionar a estos eventos para varias cosas, por ejemplo, Â¡silenciar los canales cuando terminan las notas!
  responses:
  - vamos a contar ciclos ðŸš² [exercise]

exercise:
  messages:
  - |-
    ðŸ“š  implementa en ðŸ§®  `APUFrameCounter`:
    **onLoad()**:
      **->** usa ```javascript this.addField(...)``` para definir un campo `use5StepSequencer` mapeado al bit 7
    **onWrite(value)**:
      **->** asigna el valor con ```javascript this.setValue(...)```
      **->** llama a ```javascript this.apu.frameSequencer.reset()```
      **->** llama a ```javascript this.apu.onQuarterFrameClock()```
      **->** llama a ```javascript this.apu.onHalfFrameClock()```
  - |-
    ðŸ“š  crea una clase ðŸ”€  `FrameSequencer` con lo siguiente:
    **constructor(apu)**:
      **->** guarda el parÃ¡metro como una propiedad (```javascript this.apu```)
      **->** llama a ```javascript this.reset()```
    **reset()**:
      **->** asigna ```javascript this.counter``` a cero
        (Â¡ese es el contador de ciclos!)
    **step()**:
      **->** incrementa ```javascript this.counter```
      **->** determina si estamos en una secuencia de 5 pasos o no mirando el campo que agregamos
      **->** si es un quarter frame, llama a ```javascript this.apu.onQuarterFrameClock()```
      **->** si es un half frame, llama a ```javascript this.apu.onHalfFrameClock()```
      **->** si es el Ãºltimo ciclo de la secuencia, llama a ```javascript this.reset()```
  - |-
    ðŸ“š  en ðŸ”Š  `APU`:
    **->** agrega una propiedad `frameSequencer` con una nueva instancia
    **->** agrega los mÃ©todos `onQuarterFrameClock()` y `onHalfFrameClock()`, por ahora vacÃ­os
    **->** llama a ```javascript this.frameSequencer.step()``` despuÃ©s de incrementar el contador de samples
  responses: []

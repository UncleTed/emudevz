---
main:
  messages:
  - so far, we created some test pulse waves
  - and now we also know what note we should play
  - it's time to connect both things and implement the Pulse Channels!
  responses:
  - sounds good 👍 [good]

good:
  messages:
  - I've abstracted the pulse wave generation logic in 📄  ~/lib/apu/PulseOscillator.js~
  - 📚  in 🟦  `PulseChannel`, import that class and add an `oscillator` property with a new instance
  - |-
    📚  implement this method:
    **sample()**:
      **->** sets ```javascript this.oscillator.frequency``` to the right frequency, based on ```javascript this.timer```
        remember the formula: ```javascript f = 1789773 / (16 * (t + 1))```
      **->** sets ```javascript this.oscillator.dutyCycle``` to `dutyCycleId` from 🟦  `PulseControl`
      **->** sets ```javascript this.oscillator.volume``` to `volumeOrEnvelopePeriod` from 🟦  `PulseControl`
      **->** returns ```javascript this.oscillator.sample()```
  - try out some games!
  - it won't sound <great> since the channels are never silenced and there's lots of missing stuff 😅
  - but you'll start hearing part of the games' melodies
  responses: []

---
main:
  messages:
  - we'll implement some opcodes in a very <incorrect> and temporary way
  - just for fun âœ¨
  - |-
    ðŸ“š  implement this method in your `CPU`:
    **step()**:
      __-> reads a byte from the memory location that PC points at
        (let's call it <opcode>)
      -> if <opcode> is 0xe8, emulates an INX instruction
      -> if <opcode> is 0xc8, emulates an INY instruction
      -> if <opcode> is 0x8a, emulates a TXA instruction
      -> otherwise, throws an error with the "Invalid opcode." message
      -> after emulating any instruction, PC is incremented__
  - |-
    then, add this method to your `NEEES`:
    **step()**:
      __-> calls cpu.step()__
  responses:
  - I don't remember what `INX`, `INY` or `TXA` do ðŸ’­ [remember]

remember:
  messages:
  - "`INX` increments the [X] register"
  - "`INY` increments the [Y] register"
  - "`TXA` transfers [X] to [A]"
  responses: []

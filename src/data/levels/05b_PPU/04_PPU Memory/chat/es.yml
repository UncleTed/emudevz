---
main:
  messages:
  - podrías preguntarte por qué nombramos la clase `CPUMemory` de esa manera
  - y no simplemente `Memory` 🤷
  - es porque hay 2 buses de memoria diferentes 🚌
  responses:
  - ¿cómo es eso? [howso]

howso:
  messages:
  - la PPU tiene su propio <espacio de direcciones> de 16 KiB, diseñado específicamente para buscar los 🕊️  tiles, 🏞️  fondos y 🎨  paletas
  - revisa 📄  ~/docs/ppu/ppu_memory.es.md~
  - la mayoría del tiempo, utilizará estas direcciones
  - y solo usará las direcciones de la CPU como un puente para comunicarse con la CPU
  - a partir de ahora, diremos algo como "dirección de PPU $1F2A" o "dirección de CPU $1F2A" para diferenciar los dos espacios
  responses:
  - ¿cómo podemos emular esto? 😮 [emulate]

emulate:
  messages:
  - 📚  _-_crea una clase `PPUMemory`, utilizando _--_📄 _-_ ~/tmpl/ppu/PPUMemory.js~ como plantilla_--_
  - 📚  _-_implementa solo el primer rango ($0000-$1FFF), tanto para las operaciones `read(...)` como `write(...)`_--_
  - _-_en <lecturas>, deberías retornar ~this.mapper.ppuRead(address)~_--_
  - _-_en <escrituras>, deberías llamar a ~this.mapper.ppuWrite(address, value)~ y retornar_--_
  - |-
    📚  _-_luego, agrega esto al constructor de tu PPU:
      ```javascript
      this.memory = new PPUMemory();```_--_
  - _-_¡recuerda importar el archivo!_--_
  responses: []

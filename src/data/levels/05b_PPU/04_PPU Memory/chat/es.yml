---
main:
  messages:
  - podrías preguntarte por qué nombramos la clase 🐏  `CPUMemory` de esa manera
  - y no simplemente `Memory` 🤷
  - es porque hay 2 buses de memoria diferentes 🚌
  responses:
  - ¿cómo es eso? [howso]

howso:
  messages:
  - la PPU tiene su propio espacio de direcciones de 16 KiB, diseñado específicamente para buscar los 🕊️  tiles, 🏞️  fondos y 🎨  paletas
  - revisa 📄  ~/docs/ppu/ppu_memory.es.md~
  - la mayoría del tiempo, utilizará direcciones PPU
  - y solo usará las direcciones CPU como un puente para comunicarse con la CPU
  - a partir de ahora, diremos algo como `dirección PPU $1F2A` o `dirección CPU $1F2A` para diferenciar los dos espacios
  responses:
  - ¿cómo podemos emular esto? 😮 [exercise]

exercise:
  messages:
  - 📚  crea una clase 🐏  `PPUMemory`, utilizando 📄  ~/tmpl/ppu/PPUMemory.js~ como plantilla
  - 📚  implementa solo el primer rango ($0000-$1FFF), tanto para las operaciones `read(...)` como `write(...)`
  - en <lecturas>, deberías retornar ```javascript this.mapper.ppuRead(address)```
  - en <escrituras>, deberías llamar a ```javascript this.mapper.ppuWrite(address, value)``` y retornar
  - |-
    📚  luego, agrega esto al constructor de tu PPU:
      ```javascript
      this.memory = new PPUMemory();```
  - ¡recuerda importar el archivo!
  responses: []

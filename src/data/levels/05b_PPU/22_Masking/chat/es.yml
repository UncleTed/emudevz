main:
  messages:
  - el registro de video 🎭  PPUMask ($2001) permite a los programas habilitar o deshabilitar partes de la renderización
  - revisa nuevamente 📄  ~/docs/ppu/video_registers.es.md~
  - 🏛️  los bits ~m~ y ~M~ controlan si la primera columna de 8px debe ser visible o no para los fondos y sprites respectivamente
  - 🏞️  ~b~ habilita la renderización de fondos
  - 🛸  y ~s~ habilita la renderización de sprites
  responses:
  - (*) ¿por qué un juego querría deshabilitar la renderización? [why]
  - hagámoslo [lets]

why:
  messages:
  - por ejemplo, para llenar VRAM más rápido usando el tiempo de VDraw, ocultando posibles glitches resultado de no hacerlo en 🏝️  VBlank
  - los juegos típicamente escriben $00 fuera de gameplay para hacer eso
  - y luego $1E para habilitar la renderización durante el gameplay
  responses:
  - ...main

lets:
  messages:
  - 📚  en `PPUMask`, implementa el método `onLoad()`, usando `addField(...)` para mapear los bits mencionados
  - |-
    usa estos nombres:
      `showBackgroundInFirst8Pixels`
      `showSpritesInFirst8Pixels`
      `showBackground`
      `showSprites`
  - |-
    📚  también, agrega estos métodos:
      **onWrite(value)**:
        **->** llama a ```javascript this.setValue(value)```
      **isRenderingEnabled()**:
        **->** retorna ```javascript this.showBackground || this.showSprites```
  - |-
    📚  en `PPU`, quieres <no hacer nada> si la renderización está deshabilitada:
      ```javascript if (!this.registers.ppuMask.isRenderingEnabled())
        return;```
    agrega eso al comienzo de `onPreLine(...)` y `onVisibleLine(...)`!
  - |-
    📚  solo llama a `BackgroundRenderer::renderScanline` si `showBackground` está habilitado,
    y solo llama a `SpriteRenderer::renderScanline` si `showSprites` está habilitado
  responses:
  - ¿no debería también cambiar los renderizadores? [renderers]

renderers:
  messages:
  - yep, veamos...
  - |-
    📚  en `BackgroundRenderer`, cambia `renderScanline()`:
    si `showBackgroundInFirst8Pixels` está apagado y `x < 8`, solo dibuja (con `PPU::plotBG(...)`) el color de fondo, incrementa `x` y después haz `continue`! ¡no proceses más!
    (recuerda que el color de fondo es ```javascript this.ppu.getColor(0, 0)```)
  - |-
    📚  en `SpriteRenderer`, cambia `_render(...)`...
    necesitas una lógica similar:
    ```javascript if (!this.ppu.registers.ppuMask.showSpritesInFirst8Pixels && x < 8)
      continue;```
    en el `if` del sprite-zero hit, agrega `showBackground` y `showSprites` como condiciones: si uno de ellos está deshabilitado, ¡no debería activarse!
  responses: []

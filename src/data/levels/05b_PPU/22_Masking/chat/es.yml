main:
  messages:
  - el registro de video 🎭  PPUMask ($2001) permite a los programas habilitar o deshabilitar partes del renderizado
  - revisa nuevamente 📄  ~/docs/ppu/video_registers.es.md~
  - 🏛️  los bits ~m~ y ~M~ controlan si la primera columna de ~8~px debe ser visible o no para el fondo y sprites respectivamente
  - 🏞️  ~b~ habilita el renderizado del fondo
  - 🛸  y ~s~ habilita el renderizado de sprites
  responses:
  - (*) ¿por qué un juego querría deshabilitar el renderizado? [why]
  - hagámoslo [exercise]

why:
  messages:
  - por ejemplo, para llenar la VRAM más rápido usando el tiempo de VDraw, ocultando posibles glitches que puedan surgir de no hacerlo en 🏝️  VBlank
  - los juegos normalmente escriben $00 fuera del gameplay para hacer eso
  - y luego $1E para habilitar el renderizado durante el gameplay
  responses:
  - ...main

exercise:
  messages:
  - 📚  en 🎭  `PPUMask`, implementa el método `onLoad()`, usando `addField(...)` para mapear los bits mencionados
  - |-
    usa estos nombres:
      - `showBackgroundInFirst8Pixels`
      - `showSpritesInFirst8Pixels`
      - `showBackground`
      - `showSprites`
  - |-
    📚  además, agrega estos métodos:
      **onWrite(value)**:
        **->** llama a ```javascript this.setValue(value)```
      **isRenderingEnabled()**:
        **->** devuelve ```javascript this.showBackground || this.showSprites```
  - |-
    📚  en 🏞️  `BackgroundRenderer`, <cambia>:
      **renderScanline()**:
        **->** si (`showBackground` está apagada) <OR> (`showBackgroundInFirst8Pixels` está apagada y `x < 8`)
          **->** solo dibuja (con `PPU::plotBG(...)`) el color de fondo
          **->** incrementa `x`
          **->** ¡`continue`! ¡no proceses más!
        (recuerda que el color de fondo es ```javascript this.ppu.getColor(0, 0)```)
  - |-
    📚  en 🛸  `SpriteRenderer`, <cambia> los siguientes métodos:
      **renderScanline()**:
        **->** en la primera línea, si `showSprites` está apagada, ¡retorna! ¡<no hagas nada>!
      **_render(...)**:
        **->** aplica una lógica similar:
          ```javascript if (!showSprites || (!showSpritesInFirst8Pixels && x < 8))
            continue;```
      **->** en la comprobación de sprite-zero hit, agrega tanto `showBackground` como `showSprites` como condiciones
        (si una de ellos es `false`, ¡no se debe disparar ningún sprite-zero hit!)
  - |-
    📚  en 🖥️  `PPU`, cambia:
    **_onPreLine()**:
      **->** en la primera línea, si `!isRenderingEnabled()` en 🎭  PPUMask, ¡retorna!
    **_onVisibleLine()**:
      **->** en la <última línea>, si `!isRenderingEnabled()` en 🎭  PPUMask, ¡retorna!
      **->** tu código debería verse así:
        ```javascript
        if (this.cycle === 0) {
          // render background
          // render sprites
        }
        
        if (!this.registers.ppuMask.isRenderingEnabled()) return;
        
        // <<¡agregaremos más código aquí después!>>```
  responses: []

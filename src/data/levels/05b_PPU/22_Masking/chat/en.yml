main:
  messages:
  - the 🎭  PPUMask video register ($2001) lets programs enable or disable parts of the rendering
  - check out again 📄  ~/docs/ppu/video_registers.en.md~
  - 🏛️  the ~m~ and ~M~ bits controls whether the first ~8~px column should be visible or not for backgrounds and sprites respectively
  - 🏞️  ~b~ enables background rendering
  - 🛸  and ~s~ enables sprite rendering
  responses:
  - (*) why would a game want to disable rendering? [why]
  - let's do it [lets]

why:
  messages:
  - for example, to fill VRAM faster using VDraw time, hiding possible glitches result of not doing it on 🏝️  VBlank
  - games typically write $00 outside gameplay to do that
  - and then $1E to enable rendering during gameplay
  responses:
  - ...main

lets:
  messages:
  - 📚  in `PPUMask`, implement the `onLoad()` method, using `addField(...)` to map the mentioned bits
  - |-
    use these names:
      `showBackgroundInFirst8Pixels`
      `showSpritesInFirst8Pixels`
      `showBackground`
      `showSprites`
  - |-
    📚  also, add these methods:
      **onWrite(value)**:
        **->** calls ```javascript this.setValue(value)```
      **isRenderingEnabled()**:
        **->** returns ```javascript this.showBackground || this.showSprites```
  - |-
    📚  in `PPU`, you want to <not do anything> if the rendering is disabled:
      ```javascript if (!this.registers.ppuMask.isRenderingEnabled())
        return;```
    add that at the beginning of both `onPreLine(...)` and `onVisibleLine(...)`!
  - |-
    📚  only call `BackgroundRenderer::renderScanline` if `showBackground` is enabled,
    and only call `SpriteRenderer::renderScanline` if `showSprites` is enabled
  responses:
  - shouldn't I also change the renderers? [renderers]

renderers:
  messages:
  - yup, let's see...
  - |-
    📚  in `BackgroundRenderer`, change `renderScanline()`...
    if `showBackgroundInFirst8Pixels` is off and `x < 8`, just plot (with `PPU::plotBG(...)`) the backdrop color, increment `x`, and `continue`! don't process further!
    (remember that the backdrop color is ```javascript this.ppu.getColor(0, 0)```)
  - |-
    📚  in `SpriteRenderer`, change `_render(...)`...
    you need a similar logic:
    ```javascript if (!this.ppu.registers.ppuMask.showSpritesInFirst8Pixels && x < 8)
      continue;```
    in the sprite-zero hit `if`, add `showBackground` and `showSprites` as conditions: if one of them is disabled, it shouldn't be triggered!
  responses: []

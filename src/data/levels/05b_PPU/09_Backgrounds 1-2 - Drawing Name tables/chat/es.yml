---
main:
  messages:
  - ahora que podemos...
  - ¡comenzaremos a dibujar 🏞️  fondos!
  responses:
  - ¡por fin! [finally]

finally:
  messages:
  - esta vez, tendrás que seguir la documentación
  - 📚  _-_lee _--_📄 _-_ ~/docs/ppu/background_rendering.es.md~_--_
  - _-_y trata de entender cómo renderizar fondos en <escala de grises>_--_
  - 📚  _-_cuando hayas terminado, elimina el código de prueba de `PPU::step`_--_
  - 📚  _-_y añade el código necesario para renderizar una línea completa del fondo en `PPU::_onVisibleLine`_--_
  responses:
  - NO ME DEJES 😭 [questions]

questions:
  messages:
  - ok, ok 😅
  - ¿tienes alguna pregunta?
  responses:
  - entonces, ¿cuántos píxeles debería dibujar? ⏹ [howmany]
  - ¿cómo sé la línea actual? 🌠 [line]
  - ayúdame con las matemáticas 🔢 [math]
  - lo hice, pero algunos juegos no parecen funcionar 🤔 [work]

howmany:
  messages:
  - la pantalla es de ~256x240~
  - necesitas ~plot~ear exactamente 256 píxeles para cada línea visible
  - y en la vida real, el hardware renderiza un píxel por ciclo, pero aquí lo haremos todo a la vez (por simplicidad)
  - entonces, solo deberías renderizar la línea cuando ~this.cycle === 256~
  responses:
  - ...questions

line:
  messages:
  - la línea actual está representada por ~this.scanline~
  responses:
  - ...questions

math:
  messages:
  - sabes que ~y = this.scanline~
  - y que tienes que dibujar desde ~x = 0~ hasta ~x = 255~
  - también sabes que la pantalla es una cuadrícula de ~32x32~ tiles (de ~8x8~ píxeles cada una)
  - |-
    una forma de implementar esto es hacer algo como:
      ```javascript
      for (let x = 0; x < 256; x += 8) {
        const nameTableId = 0; // TODO: Obtener el id de la name table
        const patternTableId = 0; // TODO: Obtener el id de la pattern table

        const tileX = Math.floor(x / 8);
        const tileY = Math.floor(this.scanline / 8);
        const tileIndex = tileY * 32 + tileX;
        const tileId = 0; // TODO: Leer el id del tile desde la memoria

        const tile = new Tile(this, patternTableId, tileId, this.scanline % 8);
        for (let xx = 0; xx < 8; xx++) {
          const colorIndex = tile.getColorIndex(xx);
          // TODO: Plotear
        }
      }```
  responses:
  - ...questions

work:
  messages:
  - bueno, ¡todavía tenemos mucho que hacer!
  - lo importante es que algunos juegos ahora deberían mostrar su fondo correctamente
  - por ejemplo, echa un vistazo a 📄  ~/roms/_test/hello_world.neees~
  - y compara la salida alternando entre BrokenNEEES y tu emulador ✨
  responses:
  - ...questions

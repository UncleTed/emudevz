main:
  messages:
  - ¡sí!
  - acabo de terminarlo
  - mira, 📄  ~/lib/ppu/LoopyRegister.js~
  responses:
  - ¿quién es loopy? [loopy]

loopy:
  messages:
  - un usuario que realizó ingeniería inversa para descubrir cómo <realmente> funciona el registro de scrolling de la PPU
  - la triste verdad es...
  - el scrolling de la PPU no funciona como lo tenemos implementado ahora mismo 😅
  - es mucho más complicado que eso
  - afortunadamente, con mi código, puedes implementar el desplazamiento Haciéndolo Bien™ ✨
  responses:
  - ¿qué necesitamos cambiar? [exercise]

exercise:
  messages:
  - |-
    📚  importa la biblioteca y agrega una propiedad `loopy` en el constructor de 🖥️  `PPU`, asignada a:
      ```javascript new LoopyRegister()```
  - |-
    📚  al final del método `_onPreLine()`, llama a:
      ```javascript this.loopy.onPreLine(this.cycle);```
  - |-
    📚  al final del método `_onVisibleLine()`, llama a:
      ```javascript this.loopy.onVisibleLine(this.cycle);```
  - |-
    📚  al final del método `plotBG(...)`, llama a:
      ```javascript if (this.registers.ppuMask.showBackground)
        this.loopy.onPlot(x);```
  - |-
    📚  en 🎛️  `PPUCtrl`, elimina el campo `nameTableId`; reemplaza su asignación en el método `onWrite(...)` con:
      ```javascript this.ppu.loopy.onPPUCtrlWrite(value);```
  - |-
    📚  en 📊  `PPUStatus`, reemplaza el código que desactiva el `latch` de 📍  `PPUAddr` con:
      ```javascript this.ppu.loopy.onPPUStatusRead();```
  - |-
    📚  en 📜  `PPUScroll`, elimina el método `onLoad()` y reemplaza `onWrite(...)` con:
      ```javascript onWrite(value) {
        this.ppu.loopy.onPPUScrollWrite(value);
      }```
  - |-
    📚  en 📍  `PPUAddr`, elimina el método `onLoad()` y reemplaza `onWrite(...)` con:
      ```javascript onWrite(value) {
        this.ppu.loopy.onPPUAddrWrite(value);
      }```
    además, agrega esta propiedad dinámica:
      ```javascript get address() {
        return this.ppu.loopy.vAddress.getValue()
      }

      set address(value) {
        this.ppu.loopy.vAddress.setValue(value);
      }```
  - |-
    📚  por último, en 🏞️  `BackgroundRenderer`, remplaza las constantes `scrolledX`, `scrolledY` and `nameTableId` con:
      ```javascript const scrolledX = this.ppu.loopy.scrolledX(x);
      const scrolledY = this.ppu.loopy.scrolledY(y);
      const nameTableId = this.ppu.loopy.nameTableId(scrolledX);```
  responses: []

corollary:
  messages:
  - está bien...
  - el scrolling ahora debería funcionar en todos los juegos, en todos los casos
  - supongo...
  - espero 😅
  responses:
  - ▶️  continuar [end]

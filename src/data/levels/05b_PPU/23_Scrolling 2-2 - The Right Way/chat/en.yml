main:
  messages:
  - yes!
  - I just finished it
  - look, 📄  ~/lib/ppu/LoopyRegister.js~
  responses:
  - who's loopy? [loopy]

loopy:
  messages:
  - a user who reverse engineered how the PPU scrolling register <really> works
  - the sad truth is...
  - PPU scrolling doesn't work the way we have it implemented right now 😅
  - it's way more complicated than that
  - luckily, with my code, you can easily implement scrolling The Right Way™ ✨
  responses:
  - what do we need to change? [exercise]

exercise:
  messages:
  - |-
    📚  import the library and add a `loopy` property to 🖥️  `PPU`'s constructor, assigned to:
         ```javascript new LoopyRegister()```
  - |-
    📚  at the end of the `_onPreLine()` method, call:
      ```javascript this.loopy.onPreLine(this.cycle);```
  - |-
    📚  at the end of the `_onVisibleLine()` method, call:
      ```javascript this.loopy.onVisibleLine(this.cycle);```
  - |-
    📚  at the end of the `plotBG(...)` method, call:
      ```javascript if (this.registers.ppuMask.showBackground)
        this.loopy.onPlot(x);```
  - |-
    📚  in 🎛️  `PPUCtrl`, remove the `nameTableId` field; replace its assignment in the `onWrite(...)` method with:
      ```javascript this.ppu.loopy.onPPUCtrlWrite(value);```
  - |-
    📚  in 📊  `PPUStatus`, replace the code that disables `PPUAdrr`'s `latch` with:
      ```javascript this.ppu.loopy.onPPUStatusRead();```
  - |-
    📚  in 📜  `PPUScroll`, remove the `onLoad()` method and replace `onWrite(...)` with:
      ```javascript onWrite(value) {
        this.ppu.loopy.onPPUScrollWrite(value);
      }```
  - |-
    📚  in 📍  `PPUAddr`, remove the `onLoad()` method and replace `onWrite(...)` with:
      ```javascript onWrite(value) {
        this.ppu.loopy.onPPUAddrWrite(value);
      }```
    also, add this dynamic property:
      ```javascript get address() {
        return this.ppu.loopy.vAddress.getValue()
      }

      set address(value) {
        this.ppu.loopy.vAddress.setValue(value);
      }```
  - |-
    📚  lastly, in 🏞️  `BackgroundRenderer`, replace the `scrolledX`, `scrolledY` and `nameTableId` constants with:
      ```javascript const scrolledX = this.ppu.loopy.scrolledX(x);
      const scrolledY = this.ppu.loopy.scrolledY(y);
      const nameTableId = this.ppu.loopy.nameTableId(scrolledX);```
  responses: []

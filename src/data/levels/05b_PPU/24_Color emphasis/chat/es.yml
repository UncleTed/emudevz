main:
  messages:
  - el PPU es capaz de "transformar" los colores de salida hasta cierto punto
  - ðŸŽ­  ~PPUMask~ tiene algunos bits que activan el <modo de escala de grises> o <Ã©nfasis de color>
  - es decir, enfatizando los componentes rojo, verde o azul de cada color
  responses:
  - Â¿cÃ³mo funciona? [how]

how:
  messages:
  - el bit 0 convierte la salida a escala de grises
  - el bit 5 enfatiza el rojo (oscureciendo el verde y el azul en un 25%)
  - el bit 6 enfatiza el verde (oscureciendo el rojo y el azul en un 25%)
  - el bit 7 enfatiza el azul (oscureciendo el rojo y el verde en un 25%)
  - si los tres bits de Ã©nfasis estÃ¡n habilitados al mismo tiempo, todos los colores estarÃ¡n un 25% mÃ¡s oscuros
  - el <Ã©nfasis de color> es independiente del <modo de escala de grises>, por lo que los bits de Ã©nfasis aÃºn tiÃ±en el color de la imagen en escala de grises
  responses:
  - entonces... [so]

so:
  messages:
  - abre ðŸ“„  ~/docs/ppu/video_registers.en.md~
  - ðŸ“š  _-_en `PPUMask`, edita el mÃ©todo `onLoad()` y usa `addField(...)` para mapear los bits `grayscale`, `emphasizeRed`, `emphasizeGreen` y `emphasizeBlue`_--_
  - |-
    ðŸ“š  _-_agrega este mÃ©todo:_--_
    *_-_*transform(color)**:_--_
      *_-_*->** divide el color en componentes `r`, `g` y `b`:_--_
        _-_```javascript let r = (color >> 0) & 0xff;```_--_
        _-_```javascript let g = (color >> 8) & 0xff;```_--_
        _-_```javascript let b = (color >> 16) & 0xff;```_--_

      *_-_*->** si ~this.grayscale~:_--_
        *_-_*->** `r = g = b = Math.floor((r + g + b) / 3)`_--_

      *_-_*->** si ALGÃšN bit de Ã©nfasis estÃ¡ habilitado:_--_
        *_-_*->** verifica si TODOS los bits de Ã©nfasis estÃ¡n habilitados_--_
          _-_(llamemos a esto ~all~)_--_
        
        *_-_*->** para cada `r`, `g` y `b`:
          *_-_*->** si el bit NO estÃ¡ habilitado o todos (`all`) estÃ¡n habilitados:_--_
           *_-_*->** disminuye el brillo del componente en un 25%:_--_
              _-_por ejemplo, el rojo serÃ­a:_--_
              _-_```javascript r = Math.floor(r * 0.75)```_--_

      *_-_*->** devuelve el color actualizado:
        _-_```javascript 0xff000000 | (r << 0) | (g << 8) | (b << 16);```_--_
- ðŸ“š  _-_y lo mÃ¡s importante, ahora `PPU::plot(...)` necesita llamar al mÃ©todo transform de `PPUMask` en lugar de usar directamente el `color`_--_
  responses: []

main:
  messages:
  - ahora que nuestro emulador es capaz de acceder a la 🛸 📖  OAM
  - ¡estamos listos para leer 🛸  sprites!
  responses:
  - ¿qué hay en la OAM? [oam]

oam:
  messages:
  - "aquí tienes un documento que explica el formato de la tabla OAM:"
  - 📄  ~/docs/ppu/sprite_rendering.es.md~
  - "también deberías hacer uso de mi clase `Sprite`:"
  - 📄  ~/lib/ppu/Sprite.js~
  - se encarga de algunas cosas como analizar los atributos
  responses:
  - gracias, pero todavía necesito leer la OAM, ¿verdad? [implement]

implement:
  messages:
  - correcto ✅
  - 📚  crea una clase 🛸  `SpriteRenderer`
  - 📚  su constructor debe recibir y asignar una propiedad `ppu` con la instancia PPU
  - |-
    📚  haz este cambio en la clase 🖥️  `PPU`:
    **constructor**:
      **->** instancia el renderizador de sprites:
        ```javascript this.spriteRenderer = new SpriteRenderer(this)```
        (¡recuerda importarlo si lo definiste en otro archivo!)
  - |-
    📚  ahora, en la clase 🛸  `SpriteRenderer`, define:
    **_createSprite(id)**:
      **->** retorna una nueva instancia de `Sprite`, leyendo el índice OAM `id`
      (¡recuerda agregar 1 a la coordenada Y!)
  responses:
  - ¿por qué debería agregar 1 a la coordenada Y? ➕ [addone]
  - ¿cómo sé si el sprite es ~8x8~ o ~8x16~? 📏 [spritesize]
  - ¿cómo sé el id de tile o el id de la pattern table? 🕊️ 📖 [patterntable]

addone:
  messages:
  - porque los datos de los sprites se retrasan por una línea de exploración 💤
  - en el hardware real, los sprites se dibujan una línea más abajo de la coordenada Y que los juegos establecen en el OAM
  - es decir, si el byte 0 de una entrada de OAM se establece en 0, se dibuja en la línea 1
  - y no hay forma de dibujar un sprite comenzando desde la línea 0
  responses:
  - ...implement

spritesize:
  messages:
  - eso es una configuración global, configurada en 🎛️  PPUCtrl
  - cuando ```javascript ppu.registers.ppuCtrl.spriteSize === 1```, los sprites deben usar el modo ~8x16~
  responses:
  - ...implement

patterntable:
  messages:
  - en modo ~8x8~, el id de tile es el `byte1` de la entrada OAM, y el id de pattern table es ```javascript ppu.registers.ppuCtrl.sprite8x8PatternTableId```
  - en modo ~8x16~, the id de tile es ```javascript (byte1 & 0b11111110)``` y el id de pattern table es ```javascript (byte1 & 0b00000001)```
  responses:
  - ...implement

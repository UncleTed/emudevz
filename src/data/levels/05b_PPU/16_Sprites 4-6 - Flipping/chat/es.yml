main:
  messages:
  - como viste en el nivel de OAM, los sprites pueden 🤸  <voltearse>, tanto horizontal como verticalmente
  - esto está representado en nuestra clase `Sprite` con los atributos `flipX` y `flipY`
  - 📚  cambia tu 🛸  `SpriteRenderer` para que dibuje los píxeles correctos, dependiendo de estos atributos
  responses:
  - (*) espera, ¿qué quisiste decir con ~voltearse~? [whats]
  - (*) necesito ayuda con el volteo horizontal [horizontal]

whats:
  messages:
  - supongamos que el sprite original se ve así
  - <{tile.png;8x8}>
  - cuando su entrada de OAM tiene el bit de <flip horizontal> encendido (byte 2, bit 6), se ve así
  - <{tile_hflip.png;8x8}>
  - y cuando tiene el bit de <flip vertical> encendido (byte 2, bit 7), se ve así
  - <{tile_vflip.png;8x8}>
  responses:
  - ...main

horizontal:
  messages:
  - mira, cuando llamas a `tile.getColorIndex(...)` estás pasando la coordenada `insideX`
  - cuando el sprite está volteado horizontalmente, deberías usar el píxel <opuesto>
  - por ejemplo, si `insideX` es 0, usas 7; si es 1, usas 6
  - |-
    siguiendo esta lógica:
      0 => 7
      1 => 6
      2 => 5
      3 => 4
      4 => 3
      5 => 2
      6 => 1
      7 => 0
  - así que básicamente tienes que hacer `7 - insideX`
  responses:
  - ¿qué hay del volteo vertical? [vertical]

vertical:
  messages:
  - el volteo vertical es similar, pero tiene una pequeña peculiaridad
  - para tener en cuenta los sprites de ~8x16~, debemos usar la coordenada Y <dentro del tile actual>
  - primero define ```javascript tileInsideY = insideY % 8;```
  - |-
    luego, como último argumento del constructor de 🕊️  `Tile`, usa:
      ```javascript sprite.flipY ? 7 - tileInsideY : tileInsideY```
  responses:
  - ...main

corollary:
  messages:
  - ¿tienes el juego 🧸 📍  ~Nalleland~?
  - si lo ejecutas, verás que ahora el oso <se voltea correctamente> al girar a la izquierda
  responses:
  - ▶️  continuar [end]

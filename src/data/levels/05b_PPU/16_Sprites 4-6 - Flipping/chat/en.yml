main:
  messages:
  - as you saw in the OAM level, sprites can be 🤸  <flipped>, both horizontally and vertically
  - this is represented in our `Sprite` class with the `flipX` and `flipY` attributes
  - 📚  change your 🛸  `SpriteRenderer` so it plots the right pixels, depending on these attributes
  responses:
  - (*) wait, what did you mean by ~flipped~? [whats]
  - (*) I need help with the horizontal flip [horizontal]

whats:
  messages:
  - let's say the original sprite looks like this
  - <{tile.png;8x8}>
  - when its OAM entry has the <horizontal flip> bit ON (byte 2, bit 6), it looks like this
  - <{tile_hflip.png;8x8}>
  - and when it has the <vertical flip> bit ON (byte 2, bit 7), it looks like this
  - <{tile_vflip.png;8x8}>
  responses:
  - ...main

horizontal:
  messages:
  - see, when you call `tile.getColorIndex(...)` you are passing the `insideX` coordinate
  - when the sprite is horizontally flipped, you should use the <opposite> pixel
  - for example, if `insideX` is 0, you use 7; if it's 1, you use 6
  - |-
    following this logic:
      0 => 7
      1 => 6
      2 => 5
      3 => 4
      4 => 3
      5 => 2
      6 => 1
      7 => 0
  - so basically you need to do `7 - insideX`
  responses:
  - what about the vertical flip? [vertical]

vertical:
  messages:
  - vertical flip is similar, but it has a little quirk
  - to take into account ~8x16~ sprites, we should use the Y coordinate <inside the current tile>
  - first define a ```javascript tileInsideY = insideY % 8;```
  - |-
    then, as the last argument of 🕊️  `Tile`'s constructor, use:
      ```javascript sprite.flipY ? 7 - tileInsideY : tileInsideY```
  responses:
  - ...main

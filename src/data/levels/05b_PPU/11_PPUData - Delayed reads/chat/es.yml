---
main:
  messages:
  - ¿recuerdas cómo los juegos escriben en VRAM?
  - <{PPUAddr_PPUData.png}>
  - ellos también pueden <leer> desde VRAM, leyendo de 📦  PPUData en lugar de escribir
  - "esta operación también incrementa la dirección en 📍  PPUAddr, y tiene un pequeño truco:"
  - todas las lecturas están <retrasadas> por 1, excepto para la sección Palette RAM y sus espejos
  responses:
  - ¿cómo podemos implementar el retraso? ⌛ [exercise]

exercise:
  messages:
  - simple, cuando se solicita una <lectura>, lees en un buffer, pero luego retornas el <valor anterior> de ese buffer
  - |-
    📚  implementa estos métodos en 📦  `PPUData`:
    **onLoad()**:
      **->** inicializa ```javascript this.buffer = 0```
    **onRead()**:
      **->** guarda ```javascript this.buffer``` en una variable llamada `data`
      **->** lee desde la dirección PPU ```javascript ppuAddr.address``` y guarda el resultado en ```javascript this.buffer```
      **->** si la dirección está entre $3F00 y $3FFF, asigna ```javascript data = this.buffer``` (omite el buffer)
      **->** llama a ```javascript this._incrementAddress()```
      **->** retorna `data`
  responses:
  - (*) ¿cómo puedo acceder a PPUAddr? [ppuaddr]

ppuaddr:
  messages:
  - recuerda que los registros tienen ```javascript this.ppu```
  - así que puedes acceder a la instancia 📍  PPUAddr con ```javascript this.ppu.registers.ppuAddr```
  responses:
  - ...exercise

main:
  messages:
  - ya que ya sabemos quÃ© sprites necesitamos dibujar y cÃ³mo renderizar los tiles,
  - dibujar sprites serÃ¡ bastante fÃ¡cil
  - |-
    nuestro mÃ©todo para renderizar una sola ğŸŒ   scanline se verÃ¡ asÃ­:
    ```javascript
    renderScanline() {
      const sprites = this._evaluate();
      this._render(sprites); // Â¡necesitamos definir esto!
    }
    ```
  responses:
  - fÃ¡cil... Â¿eh? [easy]

easy:
  messages:
  - vamos a hacer lo siguiente
  - |-
      ğŸ“š  _-_en la clase `PPU`, cambia:_--_
      *_-_*_onVisibleLine(...)**:_--_
        *_-_*->** justo debajo de la llamada ~renderScanline()~ a ~backgroundRenderer~..._--_
        *_-_*->** ...haz lo mismo con ~spriteRenderer~_--_
  - |-
      ğŸ“š  _-_implementa estos mÃ©todos en `SpriteRenderer`:_--_
      *_-_*renderScanline()**:_--_
        *_-_*->** Â¡usa el cÃ³digo de mi mensaje anterior!_--_
      *_-_*_render(sprites)**:_--_
        *_-_*->** para cada sprite en ~sprites~:_--_
          *_-_*->** calcula la coordenada Y "interna":_--_
            _-_```javascript sprite.diffY(this.ppu.scanline)```_--_
            _-_(llamemos a esto ~insideY~)_--_
          *_-_*->** instancia un ~Tile~ pasando la ppu, el id de la pattern table, el id del tile y el ~insideY~_--_
            _-_(llamemos a esto ~tile~)_--_
          *_-_*->** crea un array con los 4 colores de paleta de ~sprite.paletteId~_--_
            _-_(llamemos a esto ~paletteColors~)_--_
          *_-_*->** ```javascript for (let insideX = 0; insideX < 8; insideX++)```:_--_
            *_-_*->** obtiene el Ã­ndice de color para este pÃ­xel usando ~tile.getColorIndex(insideX)~_--_
              _-_(llamemos a esto ~colorIndex~)_--_
            *_-_*->** si ~colorIndex > 0~ (es decir, el pÃ­xel no es transparente):_--_
              *_-_*->** llama a ~this.ppu.plot(...)~ para dibujar el pÃ­xel_--_
  responses:
  - Â¿quÃ© pattern table deberÃ­a usar? [patterntable]
  - Â¿quÃ© id de tile deberÃ­a usar? [tileid]
  - Â¿cÃ³mo puedo obtener los colores de la paleta? [palette]
  - Â¿quÃ© X y Y deberÃ­a usar al dibujar pÃ­xeles? [coordinates]
  - Â¿quÃ© color deberÃ­a usar al dibujar pÃ­xeles? [color]

patterntable:
  messages:
  - Â¡pregÃºntale al sprite!
  - "```javascript sprite.patternTableId```"
  responses:
  - ...easy

tileid:
  messages:
  - Â¡el sprite sabe!
  - "```javascript sprite.tileIdFor(insideY)```"
  responses:
  - ...easy

palette:
  messages:
  - |-
    puedes obtener, por ejemplo, el <color 2> usando:
    ```javascript this.ppu.getColor(sprite.paletteId, 2)```
  responses:
  - ...easy

coordinates:
  messages:
  - la posiciÃ³n ~x~ deberÃ­a ser ```javascript sprite.x + insideX```
  - la posiciÃ³n ~y~ deberÃ­a ser la scanline actual
  responses:
  - ...easy

color:
  messages:
  - leer ~paletteColors~ con el ~colorIndex~ te darÃ¡ el ~color~
  responses:
  - ...easy

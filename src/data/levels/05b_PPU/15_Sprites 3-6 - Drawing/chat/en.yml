main:
  messages:
  - since we already know which sprites we need to draw and how to render tiles,
  - drawing sprites will be fairly easy
  - |-
    our method to render a single ðŸŒ   scanline will look like this:
    ```javascript
    renderScanline() {
      const sprites = this._evaluate();
      this._render(sprites); // we need to define this!
    }
    ```
  responses:
  - easy... huh? [easy]

easy:
  messages:
  - we're gonna do the following
  - |-
      ðŸ“š  _-_in the `PPU` class, change:_--_
      *_-_*onVisibleLine(...)**:_--_
        *_-_*->** just below the ~renderScanline()~ call to ~backgroundRenderer~..._--_
        *_-_*->** ...do the same with ~spriteRenderer~_--_
  - |-
      ðŸ“š  _-_and now, implement these methods in `SpriteRenderer`:_--_
      *_-_*renderScanline()**:_--_
        *_-_*->** use the code from my previous message!_--_
      *_-_*_render(sprites)**:_--_
        *_-_*->** for each sprite in ~sprites~:_--_
          *_-_*->** calculates the "inside" Y coordinate:_--_
            _-_```javascript sprite.diffY(this.ppu.scanline)```_--_
            _-_(let's call this ~insideY~)_--_
          *_-_*->** instantiates a ~Tile~ passing the ppu, the pattern table id, the tile id, and the ~insideY~_--_
            _-_(let's call this ~tile~)_--_
          *_-_*->** creates an array with the 4 palette colors of ~sprite.paletteId~_--_
            _-_(let's call this ~paletteColors~)_--_
          *_-_*->** ```javascript for (let insideX = 0; insideX < 8; insideX++)```:_--_
            *_-_*->** retrieves the color index for this pixel using ~tile.getColorIndex(insideX)~_--_
              _-_(let's call this ~colorIndex~)_--_
            *_-_*->** if ~colorIndex > 0~ (meaning, the pixel is not transparent):_--_
              *_-_*->** calls ~this.ppu.plot(...)~ to draw the pixel_--_
  responses:
  - what pattern table should I use? [patterntable]
  - what tile id should I use? [tileid]
  - how can I get the palette colors? [palette]
  - what X and Y should I use when plotting pixels? [coordinates]
  - what color should I use when plotting pixels? [color]

patterntable:
  messages:
  - ask the sprite!
  - "```javascript sprite.patternTableId```"
  responses:
  - ...easy

tileid:
  messages:
  - the sprite knows!
  - "```javascript sprite.tileIdFor(insideY)```"
  responses:
  - ...easy

palette:
  messages:
  - |-
    you can get, for example, <color 2> by using:
    ```javascript this.ppu.getColor(sprite.paletteId, 2)```
  responses:
  - ...easy

coordinates:
  messages:
  - the ~x~ position should be ```javascript sprite.x + insideX```
  - the ~y~ position should be the current scanline
  responses:
  - ...easy

color:
  messages:
  - reading ~paletteColors~ with the ~colorIndex~ will give you the ~color~
  responses:
  - ...easy

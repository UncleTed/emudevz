main:
  messages:
  - since we already know which sprites we need to draw and how to render tiles,
  - drawing sprites will be fairly easy
  - |-
    our method to render a single ðŸŒ   scanline will look like this:
    ```javascript
    renderScanline() {
      const sprites = this._evaluate();
      this._render(sprites); // we need to define this!
    }
    ```
  responses:
  - easy... huh? [easy]

easy:
  messages:
  - we're gonna do the following
  - |-
      ðŸ“š  in the `PPU` class, change:
      **onVisibleLine(...)**:
        **->** just below the `renderScanline()` call to `backgroundRenderer`...
        **->** ...do the same with `spriteRenderer`
  - |-
      ðŸ“š  and now, implement these methods in `SpriteRenderer`:
      **renderScanline()**:
        **->** use the code from my previous message!
      **_render(sprites)**:
        **->** determine the y coordinate:
          ```javascript this.ppu.scanline;```
          (let's call this `y`)
        **->** for each sprite in `sprites`:
          **->** calculates the "inside" Y coordinate:
            ```javascript sprite.diffY(y)```
            (let's call this `insideY`)
          **->** instantiates a `Tile` passing the ppu, the pattern table id, the tile id, and the `insideY`
            (let's call this `tile`)
          **->** creates an array with the 4 palette colors of `sprite.paletteId`
            (let's call this `paletteColors`)
          **->** ```javascript for (let insideX = 0; insideX < 8; insideX++)```:
            **->** retrieves the color index for this pixel using `tile.getColorIndex(insideX)`
              (let's call this `colorIndex`)
            **->** if `colorIndex > 0` (meaning, the pixel is not transparent):
              **->** calls `this.ppu.plot(...)` to draw the pixel
  responses:
  - what pattern table should I use? [patterntable]
  - what tile id should I use? [tileid]
  - how can I get the palette colors? [palette]
  - what X and Y should I use when plotting pixels? [coordinates]
  - what color should I use when plotting pixels? [color]

patterntable:
  messages:
  - ask the sprite!
  - "```javascript sprite.patternTableId```"
  responses:
  - ...easy

tileid:
  messages:
  - the sprite knows!
  - "```javascript sprite.tileIdFor(insideY)```"
  responses:
  - ...easy

palette:
  messages:
  - |-
    you can get, for example, <color 2> by using:
    ```javascript this.ppu.getColor(sprite.paletteId, 2)```
  responses:
  - ...easy

coordinates:
  messages:
  - the ~x~ position should be ```javascript sprite.x + insideX```
  - the ~y~ position should be the current scanline
  responses:
  - ...easy

color:
  messages:
  - reading `paletteColors` with the `colorIndex` will give you the ~color~
  responses:
  - ...easy

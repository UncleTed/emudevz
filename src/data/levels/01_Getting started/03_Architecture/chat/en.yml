---
main:
  run: |
    set((m) => m.chat.winOnEnd = true);
    {{Right}}.load("architecture.png");
  messages:
  - so... this thing has 3 main components that work pretty much independently of each other
  - "these are: 🧠  CPU, 🖥️  PPU, and 🔊  APU"
  - "in order to play games, you must connect two pieces of hardware:"
  - 💾  a cartridge (the game itself!)
  - 🎮  the controller, an 8-button gamepad
  responses:
  - 🧠  tell me about the CPU [cpu]
  - 🖥️  tell me about the PPU [ppu]
  - 🔊  tell me about the APU [apu]
  - ⏭️  what's the best way to start? [start]

cpu:
  run: |
    {{Right}}.load("architecture.png");
  messages:
  - it's the <Central Processing Unit>
  - reads a game's code and executes its instructions
  - like the one in your computer, but <several> times slower
  - it has access to a 2 KiB bank of WRAM (Work RAM)
  responses:
  - and where's the game's code? [thecode]
  - ...main

thecode:
  run: |
    {{Right}}.load("cartridge.png");
  messages:
  - in the cartridge!
  - specifically, in a chip called 🤖  PRG-ROM (Program ROM)
  responses:
  - ...main

ppu:
  run: |
    {{Right}}.load("architecture.png");
  messages:
  - it's the <Picture Processing Unit>
  - draws graphics by putting pixels on the screen
  - in the magnificent resolution of ~256x240~!
  - and it has access to a 2 KiB bank of VRAM (Video RAM)
  responses:
  - and where are those graphics located? [thegraphics]
  - ...main

thegraphics:
  run: |
    {{Right}}.load("cartridge.png");
  messages:
  - in the cartridge! :)
  - specifically, in a chip called 👾  CHR-ROM (Character ROM)
  responses:
  - ...main

apu:
  run: |
    {{Right}}.load("architecture.png");
  messages:
  - it's the <Audio Processing Unit>
  - handles sound, producing audio waves
  - like pulse waves, triangle waves, noise, and even custom samples!
  responses:
  - ...main

start:
  messages:
  - you should learn first how the 🧠  CPU works
  - to emulate it, we'll have to interpret games' code
  - they're written in assembly, so let's study that first
  - are you ready?
  responses:
  - yeah, let's go [end]
